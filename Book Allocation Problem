bool isPossible(vector<int>arr, int n, int m, int mid){
    int studentCount=1;
    int pagesum=0;

    for(int i=0;i<n;i++){
        if(pagesum+arr[i]<=mid){
            pagesum+=arr[i];
        }
        else{
            studentCount++;
            if(studentCount>m || arr[i]>mid){
                return false;
            }
            pagesum=arr[i];
        }
    }
    return true;

}

int findPages(vector<int>& arr, int n, int m) {
    int start=0;       
    int sum=0;

    if(m>n){
        return -1;
    }

    for(int i=0;i<n;i++){
        sum+=arr[i];
    }
    int end=sum;
    int mid=start+(end-start)/2;
    int ans=-1;
    
    while(start<=end){
        if(isPossible(arr,n,m,mid)){    //min ans could be mid or in left part
            ans=mid;
            end=mid-1;
        }
        else{                           // ans is in right part only
            start=mid+1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}
